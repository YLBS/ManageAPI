1.执行SQL查询 将结果集映射到DTO
	查寻一条数据，返回 Dto
	var result= await _context.Database.GetDbConnection().QueryFirstOrDefaultAsync<Dto>(sql);
	查询多条，返回 IEnumerable<Dto>
	var result= await _context.Database.GetDbConnection().QueryAsync<Dto>(sql);
2.执行存储过程查询 
	单个结果集
	var parameters = new { 参数名称1 = 值,参数名称2 = 值.....};
	var result= await _context.Database.GetDbConnection().QueryAsync<Dto>("存储过程名称", parameters, commandType: CommandType.StoredProcedure);
	一条数据，没有返回null
	var parameters = new { 参数名称1 = 值,参数名称2 = 值.....};
	var result= await _context.Database.GetDbConnection().QueryFirstOrDefaultAsync<Dto>("存储过程名称", parameters, commandType: CommandType.StoredProcedure);
	 
	多个结果集
	 var multiReader = await _context.Database.GetDbConnection().QueryMultipleAsync("存储过程名称", parameters, commandType: CommandType.StoredProcedure);
	 // 假设第一个结果集是一个列表
	 var firstResultSet = multiReader.Read<Dto1>();
	 // 假设第二个结果集是一个分页总数
	 var count = multiReader.Read<int>().ToList().FirstOrDefault();
	 //最后关闭释放
	 multiReader.Dispose();
3.执行无结果集返回
	例如执行修改的SQL
	string sql = "UPDATE YourTable SET ColumnName = @Value WHERE ConditionColumn = @ConditionValue";
	// 参数
	var parameters = new { Value = "New Value", ConditionValue = "Condition" };
	var result= await _context.Database.GetDbConnection().ExecuteAsync(sql,parameters);
	result 为受影响行数

	例如执行添加的存储过程
	var parameters = new { Parameter1 = parameter1, Parameter2 = parameter2 };
	var result = connection.Execute("存储过程名称", parameters, commandType: CommandType.StoredProcedure);
	result 为受影响行数
4.SQL查询返回一个总数目
	string sql=""select count(*) from tableName";
	var result = await _context.Database.GetDbConnection().QueryFirstOrDefaultAsync<int>(sql);
5.获取存储过程输出的值 out ，暂时没有找到方法获取返回值，return 的值
	例如
	var parameters = new { MemID = memId, SalerID = userId, DeptUserID = departId };
    var dynamicParams = new DynamicParameters(parameters); 
    dynamicParams.Add("Result", dbType: DbType.Boolean, direction: ParameterDirection.Output);

    var result = await _context.Database.GetDbConnection().ExecuteAsync(
        "Sales_EnableViewCompany_N", dynamicParams,
        commandType: CommandType.StoredProcedure
    );
	object outputParameterValue = dynamicParams.Get<object>("Result");
	outputParameterValue 为输出值